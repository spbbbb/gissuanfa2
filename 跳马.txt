#include<iostream>
using namespace std; 
int changex[] = {2, 2, 1, -1, -2, -2, -1, 1}; 
int changey[] = {1, -1, 2, 2, 1, -1, -2, -2}; 
void DFS(int x, int y);

bool vis[1050][1050]; 
int step=0; 
int startx, starty;
int m,n;

int main() 
{ 
	memset(vis, 0, sizeof(vis));
	cin >> startx >> starty; 
	DFS(startx, starty); 
	if (startx > m || startx < 1 || starty > n || starty < 1) 
		cout << "ERROR" << endl;
	else 
		cout << step << endl; 
}
 
void DFS(int x, int y) 
{
	if(vis[x][y]) 
	{ 
		if(x == startx && y == starty) 
			step ++; 
		return ; 
	} 

    vis[x][y] = 1; 
	for(int i = 0; i < 8; ++i) 
	{ 
		int tx = x + changex[i];
		int ty = y + changey[i];
		if(tx >= 1 && tx <= m && ty >= 1 && ty <= n)
		{
			
			DFS(tx,ty);
		}
	 }
	 vis[x][y] = 0;
}
